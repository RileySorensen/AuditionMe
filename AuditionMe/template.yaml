AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  TodoPerson2024SAM

  Sample SAM Template for TodoPerson2024SAM

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

  Api:
    Cors:
      AllowMethods: "'GET,POST,DELETE,PUT,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"

Resources:
#directorMethods
  CreateDirectorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../director/create_director/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              DirectorTable
      Architectures:
        - x86_64
      Events:
        CreateDirector:
          Type: Api
          Properties:
            Path: /director
            Method: post

  DeleteDirectorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../director/delete_director/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              DirectorTable
      Architectures:
        - x86_64
      Events:
        DeleteDirector:
          Type: Api
          Properties:
            Path: /director/{id}
            Method: delete

  GetDirectorWithId:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../director/get_director/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              DirectorTable
      Architectures:
        - x86_64
      Events:
        GetDirectorID:
          Type: Api
          Properties:
            Path: /director/{id}
            Method: get
  #PerformanceMethods
  CreatePerformance:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performance/create_performance/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformanceTable
      Architectures:
        - x86_64
      Events:
        CreatePerformance:
          Type: Api
          Properties:
            Path: /performance
            Method: post

  DeletePerformance:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performance/delete_performance/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformanceTable
      Architectures:
        - x86_64
      Events:
        DeletePerformanceById:
          Type: Api
          Properties:
            Path: /performance/{id}
            Method: delete

  GetPerformance:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performance/get_performance/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformanceTable
      Architectures:
        - x86_64
      Events:
        GetPerformanceById:
          Type: Api
          Properties:
            Path: /performance/{id}
            Method: get

#PerformerMethods
  CastPerformerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performer/cast_performer/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformanceTable
      Architectures:
        - x86_64
      Events:
        CastPerformer:
          Type: Api
          Properties:
            Path: /director
            Method: put


  CreatePerformer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performer/create_performer/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformerTable
      Architectures:
        - x86_64
      Events:
        CreatePerformer:
          Type: Api
          Properties:
            Path: /performer
            Method: post

  DeletePerformer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performer/delete_performer/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformerTable
      Architectures:
        - x86_64
      Events:
        DeletePerformer:
          Type: Api
          Properties:
            Path: /performer/{id}
            Method: delete

  GetPerformer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../performer/get_performer/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - AmazonDynamoDBFullAccess
        - DynamoDBCrudPolicy:
            TableName:
              #!Ref MyDynamoDB
              PerformerTable
      Architectures:
        - x86_64
      Events:
        GetPerformer:
          Type: Api
          Properties:
            Path: /performer{id}
            Method: get

  MyDynamoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      TableName: AuditionMeSAM

#  DirectorDB:
#    Type: AWS::Serverless::SimpleTable
#    #Type: AWS::Serverless::DynamoDBTable
#    Properties:
#      PrimaryKey:
#        Name: Id
#        Type: String
#      TableName: DirectorTable

#  PerformanceDB:
#    Type: AWS::Serverless::SimpleTable
#    #Type: AWS::Serverless::DynamoDBTable
#    Properties:
#      PrimaryKey:
#        Name: Id
#        Type: String
#      TableName: PerformanceTable
#
#  PerformerDB:
#    Type: AWS::Serverless::SimpleTable
#    #Type: AWS::Serverless::DynamoDBTable
#    Properties:
#      PrimaryKey:
#        Name: Id
#        Type: String
#      TableName: PerformerTable

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  AuditionMeApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Person function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/person/"
